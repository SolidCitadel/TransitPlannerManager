name: CI - Build and Push to ECR

on:
  push:
    branches: [ "main" ] # main 브랜치에 푸시될 때 실행

permissions:
  id-token: write # OIDC 토큰을 발급받기 위한 권한
  contents: read  # 리포지토리 코드를 읽기 위한 권한

jobs:
  build-and-push:
    runs-on: ubuntu-latest # 워크플로우를 실행할 가상 환경
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3 # 1. 소스 코드 체크아웃

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 # 2. AWS 인증 설정
        with:
          role-to-assume: arn:aws:iam::904924507098:role/github-actions-ecr-push-role # 1단계에서 만든 IAM 역할의 ARN
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1 # 3. ECR 로그인

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} # ECR 로그인 결과에서 레지스트리 주소 가져오기
          ECR_REPOSITORY: tp-admin-api # ECR 리포지토리 이름
          IMAGE_TAG: ${{ github.sha }} # Git 커밋 해시 전체를 태그로 사용
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test --no-daemon
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG