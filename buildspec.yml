version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      # ECR 로그인. AWS_ACCOUNT_ID와 AWS_DEFAULT_REGION은 CodeBuild가 자동으로 제공하는 환경 변수.
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/tp-admin-api
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7) # Git 커밋 해시 앞 7자리를 이미지 태그로 사용

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      # Docker 이미지 빌드. ECR 리포지토리 주소와 Git 커밋 해시로 태그 지정
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      # 빌드된 이미지를 ECR에 푸시 (latest 태그와 커밋 해시 태그 모두)
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # 다음 단계(CodeDeploy, ECS 배포)를 위해 이미지 정보를 담은 파일을 생성
      - printf '[{"name":"my-container","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json # 생성된 파일을 파이프라인의 다음 단계로 전달